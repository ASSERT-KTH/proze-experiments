PDFMergerUtility.PDFMergerUtility( );1;1;3
PDFMergerUtility.acroFormJoinFieldsMode( PDFCloneUtility cloner , PDAcroForm destAcroForm , PDAcroForm srcAcroForm );11;6;30
PDFMergerUtility.acroFormLegacyMode( PDFCloneUtility cloner , PDAcroForm destAcroForm , PDAcroForm srcAcroForm );14;8;36
PDFMergerUtility.addSource( File source );2;1;3
PDFMergerUtility.addSource( InputStream source );2;1;3
PDFMergerUtility.addSource( String source );3;1;3
PDFMergerUtility.addSources( List < InputStream > sourcesList );2;1;3
PDFMergerUtility.appendDocument( PDDocument destination , PDDocument source );107;59;327
PDFMergerUtility.cleanupFieldCOSDictionary( COSDictionary fieldCos );2;1;8
PDFMergerUtility.cleanupWidgetCOSDictionary( COSDictionary widgetCos , boolean removeDAEntry );2;2;9
PDFMergerUtility.getAcroFormMergeMode( );2;1;3
PDFMergerUtility.getDestinationDocumentInformation( );2;1;3
PDFMergerUtility.getDestinationFileName( );3;1;3
PDFMergerUtility.getDestinationMetadata( );2;1;3
PDFMergerUtility.getDestinationStream( );2;1;3
PDFMergerUtility.getDocumentMergeMode( );2;1;3
PDFMergerUtility.getIDTreeAsMap( PDNameTreeNode < PDStructureElement > idTree );9;4;20
PDFMergerUtility.getNumberTreeAsMap( PDNumberTreeNode tree );9;4;20
PDFMergerUtility.hasOnlyDocumentsOrParts( COSArray kLevelOneArray );9;5;17
PDFMergerUtility.isDynamicXfa( PDAcroForm acroForm );6;2;3
PDFMergerUtility.isIgnoreAcroFormErrors( );2;1;3
PDFMergerUtility.legacyMergeDocuments( MemoryUsageSetting memUsageSetting );16;10;56
PDFMergerUtility.mergeAcroForm( PDFCloneUtility cloner , PDDocumentCatalog destCatalog , PDDocumentCatalog srcCatalog );15;8;33
PDFMergerUtility.mergeDocuments( );1;1;3
PDFMergerUtility.mergeDocuments( MemoryUsageSetting memUsageSetting );4;3;10
PDFMergerUtility.mergeFields( PDFCloneUtility cloner , PDField destField , PDField srcField );9;11;61
PDFMergerUtility.mergeIDTree( PDFCloneUtility cloner , PDStructureTreeRoot srcStructTree , PDStructureTreeRoot destStructTree );11;5;29
PDFMergerUtility.mergeInto( COSDictionary src , COSDictionary dst , Set < COSName > exclude );7;4;9
PDFMergerUtility.mergeKEntries( PDFCloneUtility cloner , PDStructureTreeRoot srcStructTree , PDStructureTreeRoot destStructTree );17;15;64
PDFMergerUtility.mergeLanguage( PDDocumentCatalog destCatalog , PDDocumentCatalog srcCatalog );7;3;10
PDFMergerUtility.mergeMarkInfo( PDDocumentCatalog destCatalog , PDDocumentCatalog srcCatalog );11;5;16
PDFMergerUtility.mergeOutputIntents( PDFCloneUtility cloner , PDDocumentCatalog srcCatalog , PDDocumentCatalog destCatalog );9;7;26
PDFMergerUtility.mergeRoleMap( PDStructureTreeRoot srcStructTree , PDStructureTreeRoot destStructTree );10;7;29
PDFMergerUtility.mergeViewerPreferences( PDDocumentCatalog destCatalog , PDDocumentCatalog srcCatalog );15;15;39
PDFMergerUtility.optimizedMergeDocuments( MemoryUsageSetting memUsageSetting );11;6;56
PDFMergerUtility.setAcroFormMergeMode( AcroFormMergeMode theAcroFormMergeMode );2;1;3
PDFMergerUtility.setDestinationDocumentInformation( PDDocumentInformation info );2;1;3
PDFMergerUtility.setDestinationFileName( String destination );2;1;3
PDFMergerUtility.setDestinationMetadata( PDMetadata meta );2;1;3
PDFMergerUtility.setDestinationStream( OutputStream destStream );2;1;3
PDFMergerUtility.setDocumentMergeMode( DocumentMergeMode theDocumentMergeMode );2;1;3
PDFMergerUtility.setIgnoreAcroFormErrors( boolean ignoreAcroFormErrorsValue );1;1;3
PDFMergerUtility.updatePageReferences( PDFCloneUtility cloner , COSArray parentTreeEntry , Map < COSDictionary , COSDictionary > objMapping );6;4;14
PDFMergerUtility.updatePageReferences( PDFCloneUtility cloner , COSDictionary parentTreeEntry , Map < COSDictionary , COSDictionary > objMapping );4;7;44
PDFMergerUtility.updatePageReferences( PDFCloneUtility cloner , Map < Integer , COSObjectable > numberTreeAsMap , Map < COSDictionary , COSDictionary > objMapping );6;4;19
PDFMergerUtility.updateParentEntry( COSArray kArray , COSDictionary newParent , COSName newStructureType );8;4;15
PDFMergerUtility.updateStructParentEntries( PDPage page , int structParentOffset );7;4;17
