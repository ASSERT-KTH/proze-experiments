***not in a method***;4;1;0
PDDocument.PDDocument( );0;1;3
PDDocument.PDDocument( COSDocument doc );0;1;3
PDDocument.PDDocument( COSDocument doc , RandomAccessRead source );0;1;3
PDDocument.PDDocument( COSDocument doc , RandomAccessRead source , AccessPermission permission );0;1;5
PDDocument.PDDocument( MemoryUsageSetting memUsageSetting );7;3;31
PDDocument.addPage( PDPage page );2;1;3
PDDocument.addSignature( PDSignature sigObject );3;1;3
PDDocument.addSignature( PDSignature sigObject , SignatureInterface signatureInterface );4;1;3
PDDocument.addSignature( PDSignature sigObject , SignatureInterface signatureInterface , SignatureOptions options );22;16;98
PDDocument.addSignature( PDSignature sigObject , SignatureOptions options );3;1;3
PDDocument.addSignatureField( List < PDSignatureField > sigFields , SignatureInterface signatureInterface , SignatureOptions options );12;7;39
PDDocument.assignAcroFormDefaultResource( PDAcroForm acroForm , COSDictionary newDict );6;5;26
PDDocument.assignAppearanceDictionary( PDSignatureField signatureField , COSDictionary apDict );4;1;5
PDDocument.assignSignatureRectangle( PDSignatureField signatureField , COSDictionary annotDict );8;3;9
PDDocument.checkSignatureAnnotation( List < PDAnnotation > annotations , PDAnnotationWidget widget );4;3;10
PDDocument.checkSignatureField( Iterator < PDField > fieldIterator , PDSignatureField signatureField );5;4;12
PDDocument.close( );8;6;23
PDDocument.findSignatureField( Iterator < PDField > fieldIterator , PDSignature sigObject );7;5;17
PDDocument.getCurrentAccessPermission( );4;2;7
PDDocument.getDocument( );2;1;3
PDDocument.getDocumentCatalog( );6;3;16
PDDocument.getDocumentId( );2;1;3
PDDocument.getDocumentInformation( );8;3;14
PDDocument.getEncryption( );6;3;7
PDDocument.getFontsToSubset( );2;1;3
PDDocument.getLastSignatureDictionary( );5;2;9
PDDocument.getNumberOfPages( );2;1;3
PDDocument.getPage( int pageIndex );2;1;3
PDDocument.getPages( );2;1;3
PDDocument.getResourceCache( );2;1;3
PDDocument.getSignatureDictionaries( );6;3;12
PDDocument.getSignatureFields( );5;4;15
PDDocument.getVersion( );6;4;24
PDDocument.importPage( PDPage page );12;3;15
PDDocument.isAllSecurityToBeRemoved( );2;1;3
PDDocument.isEncrypted( );2;1;3
PDDocument.load( File file );3;1;3
PDDocument.load( File file , MemoryUsageSetting memUsageSetting );4;1;3
PDDocument.load( File file , String password );4;1;3
PDDocument.load( File file , String password , InputStream keyStore , String alias );6;1;3
PDDocument.load( File file , String password , InputStream keyStore , String alias , MemoryUsageSetting memUsageSetting );8;2;13
PDDocument.load( File file , String password , MemoryUsageSetting memUsageSetting );5;1;3
PDDocument.load( InputStream input );3;1;3
PDDocument.load( InputStream input , MemoryUsageSetting memUsageSetting );4;1;3
PDDocument.load( InputStream input , String password );4;1;3
PDDocument.load( InputStream input , String password , InputStream keyStore , String alias );6;1;3
PDDocument.load( InputStream input , String password , InputStream keyStore , String alias , MemoryUsageSetting memUsageSetting );9;2;15
PDDocument.load( InputStream input , String password , MemoryUsageSetting memUsageSetting );5;1;3
PDDocument.load( RandomAccessBufferedFileInputStream raFile , String password , InputStream keyStore , String alias , MemoryUsageSetting memUsageSetting );9;2;14
PDDocument.load( byte [ ] input );2;1;3
PDDocument.load( byte [ ] input , String password );3;1;3
PDDocument.load( byte [ ] input , String password , InputStream keyStore , String alias );5;1;3
PDDocument.load( byte [ ] input , String password , InputStream keyStore , String alias , MemoryUsageSetting memUsageSetting );9;1;7
PDDocument.prepareNonVisibleSignature( PDSignatureField signatureField );6;1;8
PDDocument.prepareVisibleSignature( PDSignatureField signatureField , PDAcroForm acroForm , COSDocument visualSignature );12;12;34
PDDocument.protect( ProtectionPolicy policy );7;4;18
PDDocument.registerTrueTypeFontForClosing( TrueTypeFont ttf );2;1;3
PDDocument.removePage( PDPage page );2;1;3
PDDocument.removePage( int pageNumber );1;1;3
PDDocument.save( File file );4;1;3
PDDocument.save( OutputStream output );4;3;20
PDDocument.save( String fileName );3;1;3
PDDocument.saveIncremental( OutputStream output );8;3;19
PDDocument.saveIncremental( OutputStream output , Set < COSDictionary > objectsToWrite );9;3;19
PDDocument.saveIncrementalForExternalSigning( OutputStream output );10;5;25
PDDocument.setAllSecurityToBeRemoved( boolean removeAllSecurity );1;1;3
PDDocument.setDocumentId( Long docId );2;1;3
PDDocument.setDocumentInformation( PDDocumentInformation info );2;1;4
PDDocument.setEncryptionDictionary( PDEncryption encryption );2;1;3
PDDocument.setResourceCache( ResourceCache resourceCache );2;1;3
PDDocument.setVersion( float newVersion );4;4;20
